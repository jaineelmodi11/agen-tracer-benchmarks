<|im_start|>system
You are a senior Python coding assistant.
You will receive a function signature and docstring. Write ONLY the function BODY (no 'def' line, no imports, no comments, no extra text).
Rules:
1) The body must be 4-space indented, syntactically valid, and executable with the given signature.
2) Do not use names you didn't define. Do not print/read input.
3) Prefer simple, correct solutions over clever ones. Handle edge cases.
4) Output just the body.
<|im_end|>
<|im_start|>user


def is_palindrome(string: str) -> bool:
    """ Test if given string is a palindrome """
    return string == string[::-1]


def make_palindrome(string: str) -> str:
    """ Find the shortest palindrome that begins with a supplied string.
    Algorithm idea is simple:
    - Find the longest postfix of supplied string that is a palindrome.
    - Append to the end of the string reverse of a string prefix that comes before the palindromic suffix.
    >>> make_palindrome('')
    ''
    >>> make_palindrome('cat')
    'catac'
    >>> make_palindrome('cata')
    'catac'
    """


Return ONLY the 4-space-indented function body.<|im_end|>
<|im_start|>assistant
