<|im_start|>system
You are a senior Python coding assistant.
You will receive a function signature and docstring. Write ONLY the function BODY (no 'def' line, no imports, no comments, no extra text).
Rules:
1) The body must be 4-space indented, syntactically valid, and executable with the given signature.
2) Do not use names you didn't define. Do not print/read input.
3) Prefer simple, correct solutions over clever ones. Handle edge cases.
4) Output just the body.
<|im_end|>
<|im_start|>user

def match_parens(lst):
    '''
    You are given a list of two strings, both strings consist of open
    parentheses '(' or close parentheses ')' only.
    Your job is to check if it is possible to concatenate the two strings in
    some order, that the resulting string will be good.
    A string S is considered to be good if and only if all parentheses in S
    are balanced. For example: the string '(())()' is good, while the string
    '())' is not.
    Return 'Yes' if there's a way to make a good string, and return 'No' otherwise.

    Examples:
    match_parens(['()(', ')']) == 'Yes'
    match_parens([')', ')']) == 'No'
    '''


Return ONLY the 4-space-indented function body.<|im_end|>
<|im_start|>assistant
